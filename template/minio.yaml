apiVersion: v1
kind: Template
metadata:
  name: minio
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: minio
    name: minio
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: minio/minio:latest
      from:
        kind: DockerImage
        name: minio/minio:latest
      importPolicy:
        scheduled: ${{SCHEDULE_IMAGE_IMPORTS}}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: minio
    name: minio
  spec:
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      app: minio
      deploymentconfig: minio
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: minio
          deploymentconfig: minio
      spec:
        containers:
        - imagePullPolicy: Always
          name: minio
          args:
          - server
          - /data
          env:
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: access-key
                name: minio
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                  key: secret-key
                  name: minio
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 20
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - stat /data && curl -s http://127.0.0.1:9000/minio/health/live
            initialDelaySeconds: 30
            periodSeconds: 20
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - minio
        from:
          kind: ImageStreamTag
          name: minio:latest
      type: ImageChange
- apiVersion: v1
  stringData:
    access-key: ${MINIO_ACCESS_KEY}
    secret-key: ${MINIO_SECRET_KEY}
  kind: Secret
  metadata:
    name: minio
  type: Opaque
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: minio
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${MINIO_VOLUME_CAPACITY}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: minio
    name: minio
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: minio
      deploymentconfig: minio
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: Whether to import new images automatically.
  name: SCHEDULE_IMAGE_IMPORTS
  value: 'false'
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: MINIO_VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Minio access key.
  displayName: Minio Access Key
  name: MINIO_ACCESS_KEY
  required: true
- description: Minio secret key.
  displayName: Minio Secret Key
  name: MINIO_SECRET_KEY
  required: true